export const runtime = "edge";

import { NextRequest, NextResponse } from "next/server";
import { notifyTelegram, notifyEmail, orderEmailHtml } from "@/app/lib/notify";

export async function GET(req: NextRequest) {
  const token = req.headers.get("authorization")?.split(" ")[1] || "";
  if (token !== (process.env.ADMIN_TOKEN || "")) {
    return NextResponse.json({ ok:false, error:"forbidden" }, { status: 403 });
  }

  const tg = await notifyTelegram("üîî –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π DH22: Telegram —Ä–∞–±–æ—Ç–∞–µ—Ç");
  const html = orderEmailHtml({
    title: "–¢–µ—Å—Ç DH22 ‚Äî –ø–∏—Å—å–º–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ",
    preheader: "–≠—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ e-mail –∫–∞–Ω–∞–ª–∞.",
    order: { number: "TEST-ORDER", amount_total: 12345, delivery_price: 0, customer_name: "Test", customer_phone: "+7", customer_email: "" },
    items: [{ name: "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–≤–∞—Ä–∞", qty: 1, price: 12345 }]
  });
  const em = await notifyEmail(process.env.EMAIL_BCC_ADMIN || "", "DH22: —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ", html);

  return NextResponse.json({ ok:true, telegram: tg, email: em });
}
